From dcc951a3db303db09309db889bf122c9e5bc856f Mon Sep 17 00:00:00 2001
From: Brian Behlendorf <behlendorf1@llnl.gov>
Date: Tue, 19 Jul 2016 15:55:52 -0700
Subject: [PATCH 13/18] Add debug logging

---
 master/buildbot/buildslave/base.py | 3 +++
 master/buildbot/process/builder.py | 5 ++++-
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/master/buildbot/buildslave/base.py b/master/buildbot/buildslave/base.py
index c28cf5043..87876f7b3 100644
--- a/master/buildbot/buildslave/base.py
+++ b/master/buildbot/buildslave/base.py
@@ -873,8 +873,11 @@ class AbstractLatentBuildSlave(AbstractBuildSlave):
             self.substantiation_deferred = defer.Deferred()
             self.substantiation_build = build
             if self.slave is None:
+                log.msg("Slave %s is not substantiated" % (self.slavename))
                 d = self._substantiate(build)  # start up instance
                 d.addErrback(log.err, "while substantiating")
+            else:
+                log.msg("Slave %s is substantiated, waiting for detach" % (self.slavename))
             # else: we're waiting for an old one to detach.  the _substantiate
             # will be done in ``detached`` below.
         return self.substantiation_deferred
diff --git a/master/buildbot/process/builder.py b/master/buildbot/process/builder.py
index 112b5c105..ff8480c72 100644
--- a/master/buildbot/process/builder.py
+++ b/master/buildbot/process/builder.py
@@ -322,7 +322,10 @@ class Builder(config.ReconfigurableServiceMixin,
 
         # set up locks
         build.setLocks(self.config.locks)
-        cleanups.append(lambda: slavebuilder.slave.releaseLocks())
+        def lockCleanup():
+            if slavebuilder.slave is not None:
+                slavebuilder.slave.releaseLocks()
+        cleanups.append(lockCleanup)
 
         if len(self.config.env) > 0:
             build.setSlaveEnvironment(self.config.env)
-- 
2.13.6

